
R version 4.4.1 (2024-06-14) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

- Project '~/research/realtime-weather-spain' loaded. [renv 1.1.4]
> # Title ####
> # For downloading and preparing historical weather data. 
> 
> rm(list=ls())
> 
> ####Dependencies####
> library(tidyverse)
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.4     ✔ readr     2.1.5
✔ forcats   1.0.0     ✔ stringr   1.5.1
✔ ggplot2   3.5.1     ✔ tibble    3.2.1
✔ lubridate 1.9.4     ✔ tidyr     1.3.1
✔ purrr     1.0.4     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> library(lubridate)
> library(data.table)

Attaching package: ‘data.table’

The following objects are masked from ‘package:lubridate’:

    hour, isoweek, mday, minute, month, quarter, second, wday, week,
    yday, year

The following objects are masked from ‘package:dplyr’:

    between, first, last

The following object is masked from ‘package:purrr’:

    transpose

> library(curl)
Using libcurl 8.9.1 with OpenSSL/3.3.1

Attaching package: ‘curl’

The following object is masked from ‘package:readr’:

    parse_date

> library(jsonlite)

Attaching package: ‘jsonlite’

The following object is masked from ‘package:purrr’:

    flatten

> library(RSocrata)
> 
> source("auth/keys.R")
> 
> # SETTING DATES ####
> start_date = as_date("2013-07-01")
> 
> h <- new_handle()
> handle_setheaders(h, 'api_key' = my_api_key)
> 
> all_dates = seq.Date(from = start_date, to=today()-4, by = "day")
> 
> stored_weather_daily = fread("data/spain_weather_daily_historical.csv.gz")
> 
> all_dates = all_dates[length(all_dates):1]
> 
> these_dates = all_dates[which(!all_dates %in% unique(stored_weather_daily$date))]
> 
> chunksize = 20
> 
> if(length(these_dates) > 0){
+ 
+ lapply(seq(1, length(these_dates), chunksize), function(j){
+   
+   this_chunk = these_dates[j:min(length(these_dates), (j+(chunksize-1)))]
+   
+   weather_daily = rbindlist(lapply(1:length(this_chunk), function(i){
+     
+     start_date = this_chunk[i]
+     print(start_date)
+     
+     tryCatch(
+       expr = {
+         req = curl_fetch_memory(paste0('https://opendata.aemet.es/opendata/api/valores/climatologicos/diarios/datos/fechaini/', start_date, 'T00%3A00%3A00UTC/fechafin/', start_date, 'T23%3A59%3A59UTC/todasestaciones'), handle=h)
+         
+         wurl = fromJSON(rawToChar(req$content))$datos
+         
+         req = curl_fetch_memory(wurl)
+         this_string = rawToChar(req$content)
+         
+         Encoding(this_string) = "latin1"
+         
+         wdia  = fromJSON(this_string) %>% as_tibble() %>% select(date = fecha, indicativo, TX = tmax, TN = tmin, HRX= hrMax, HRN = hrMin) %>% mutate(date = as_date(date),
+           TX = as.numeric(str_replace(TX, ",", ".")),
+           TN = as.numeric(str_replace(TN, ",", ".")),
+           HRX = as.numeric(str_replace(HRX, ",", ".")),
+           HRN = as.numeric(str_replace(HRN, ",", ".")) 
+         ) %>% as.data.table()
+         return(wdia)
+         
+       },
+       error = function(e){ 
+         # (Optional)
+         # Do this if an error is caught...
+         print(e)
+         Sys.sleep(50)
+         return(NULL)
+       },
+       warning = function(w){
+         print(w)
+         
+         # (Optional)
+         # Do this if a warning is caught...
+         return(NULL)
+       },
+       finally = {
+         # (Optional)
+         # Do this at the end before quitting the tryCatch structure...
+       }
+     )
+     
+   }))
+   
+   stored_weather_daily = fread("data/spain_weather_daily_historical.csv.gz")
+   
+ #  stored_weather_daily =  stored_weather_daily %>% mutate(date = as_date(date), HRX = as.numeric(HRX), HRN = as.numeric(HRN))
+   
+   weather_daily = rbindlist(list(weather_daily, stored_weather_daily))
+   
+   print("writing chunk")
+   
+   fwrite(weather_daily, "data/spain_weather_daily_historical.csv.gz")
+   
+   print("pausing 30 seconds")
+   Sys.sleep(30)
+   
+ })
+ 
+ } else{
+   
+   print("Up to date - no historical data downloaded")
+ }
[1] "Up to date - no historical data downloaded"
> 
> 
> proc.time()
   user  system elapsed 
  5.072   0.620   6.790 
